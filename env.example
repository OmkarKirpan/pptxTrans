# PowerPoint Translator App - Frontend Environment Configuration
# Copy this file to .env.local and fill in your actual values

# =============================================================================
# SUPABASE CONFIGURATION (Required)
# =============================================================================
# Get these from your Supabase project dashboard (Settings -> API)
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-supabase-anon-key

# Supabase service role key (for server-side operations)
# WARNING: Keep this secret! Never expose to client-side code
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# =============================================================================
# MICROSERVICES CONFIGURATION
# =============================================================================
# PPTX Processor Service URL
NEXT_PUBLIC_PPTX_PROCESSOR_URL=http://localhost:8000

# Audit Service URL (for activity logging)
NEXT_PUBLIC_AUDIT_SERVICE_URL=http://localhost:4006
AUDIT_SERVICE_URL=http://localhost:4006

# Share Service URL (for presentation sharing)
NEXT_PUBLIC_SHARE_SERVICE_URL=http://localhost:3001
SHARE_SERVICE_URL=http://localhost:3001

# Translation Session Service URL
NEXT_PUBLIC_TRANSLATION_SESSION_SERVICE_URL=http://localhost:3002

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Environment (development, staging, production)
NODE_ENV=development

# =============================================================================
# DEVELOPMENT NOTES
# =============================================================================
# 1. For local development with Docker Compose:
#    - Use service names as hostnames (e.g., http://pptx-processor:8000)
#    - Ensure all services are running via docker-compose up
#
# 2. For production deployment:
#    - Replace localhost URLs with actual service URLs
#    - Use HTTPS URLs for production Supabase projects
#    - Ensure CORS settings are properly configured
#
# 3. Required Supabase Setup:
#    - Create a new Supabase project
#    - Set up authentication providers
#    - Configure RLS policies for your database tables
#    - Create storage buckets for file uploads 