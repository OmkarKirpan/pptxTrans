# Share Service Environment Configuration  
# Copy this file to .env and fill in your actual values

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Port for the share service
PORT=3001

# Environment (development, staging, production)
NODE_ENV=development

# Log level (debug, info, warn, error)
LOG_LEVEL=info

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# CORS allowed origin (frontend URL)
CORS_ORIGIN=http://localhost:3000

# Frontend URL for constructing share links
FRONTEND_URL=http://localhost:3000

# Application base URL for share URL generation
APP_BASE_URL=http://localhost:3000

# =============================================================================
# SUPABASE CONFIGURATION (Required)
# =============================================================================
# Supabase project URL
SUPABASE_URL=https://your-project-id.supabase.co

# Supabase anonymous key (for public operations)
SUPABASE_ANON_KEY=your-supabase-anon-key

# Supabase service role key (for admin operations)
# WARNING: Keep this secret! Has full database access
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# =============================================================================
# JWT CONFIGURATION
# =============================================================================
# JWT secret key for share token generation
JWT_SECRET_KEY=your-jwt-secret-key-for-share-tokens

# Share token secret (separate from JWT secret)
SHARE_TOKEN_SECRET=your-share-token-secret

# =============================================================================
# DEVELOPMENT NOTES
# =============================================================================
# 1. Share Token System:
#    - Generates secure tokens for presentation sharing
#    - Tokens include expiration and permission settings
#    - Uses JWT for token structure and validation
#
# 2. Database Requirements:
#    - Requires share-related tables in Supabase
#    - Implements permission-based access control
#    - Stores share metadata and access logs
#
# 3. Security Features:
#    - Time-limited share tokens
#    - Permission-based access (view, edit, comment)
#    - Rate limiting for share creation
#    - IP-based access controls (optional)
#
# 4. Share URL Format:
#    - Uses APP_BASE_URL to construct share links
#    - Format: {APP_BASE_URL}/shared/{share_token}
#    - Tokens are validated before granting access
#
# 5. Integration:
#    - Works with frontend share components
#    - Integrates with audit service for access logging
#    - Supports real-time updates via Supabase
#
# 6. Performance:
#    - Built on Hono.js for fast request handling
#    - Uses Bun.js runtime for improved performance
#    - Implements caching for frequently accessed shares 